{{- $NodeAllocation := .Values.Storage.NodeAllocation | default (list (dict "storage" "storage" "host" "3fs")) -}}
{{- range $item := $NodeAllocation }}
---
kind: StatefulSet
apiVersion: apps/v1
metadata:
  name: {{ .storage | default $.Values.Storage.PodLabelValue | default "storage" }}
  namespace: {{ $.Values.Common.namespace | default "k3fs" }}
  annotations:
    {{- include "Storage.hook.annotations" $ | nindent 4 }}
spec:
  {{- if eq $.Values.Storage.DeployMode "default" }}
  ordinals:
    start: {{ $.Values.Storage.IdStart }}
  {{- end }}
  serviceName: storage
  selector:
    matchLabels:
      {{ $.Values.Common.PodLabel | default "role" }}: {{ $.Values.Storage.PodLabelValue | default "storage" }}
  replicas: {{ $.Values.Storage.replicas | default $.Values.Common.replicas | default 3 }}
  {{- if eq $.Values.Storage.DeployMode "default" }}
  podManagementPolicy: Parallel
  {{- end }}
  minReadySeconds: 30
  template:
    metadata:
      labels:
        {{ $.Values.Common.PodLabel | default "role" }}: {{ $.Values.Storage.PodLabelValue | default "storage" }}
    spec:
      hostNetwork: true
      serviceAccountName: {{ $.Values.Common.kube_sa}}
      {{- if eq $.Values.Storage.DeployMode "default" }}
      {{- include "Storage.affinity" $ | nindent 6 }}
      {{- else }}
      nodeSelector:
        {{ $.Values.Common.NodeLabel }}: {{ .host }}
      {{- end }}
      initContainers:
      - name: check-rdma-link
        image: {{ $.Values.Common.image }}
        imagePullPolicy: {{ $.Values.Common.imagePullPolicy | default "IfNotPresent" }}
        securityContext: 
          privileged: true
          runAsUser: 0
        command:
        - "bash"
        - "-c"
        - |
          /bin/bash /opt/3fs/shell/check.sh get_rdma_status
        env:
          {{- include "Common.env" . | nindent 10 }}
        envFrom:
          {{- include "Common.envFrom" $ | nindent 10 }}
        volumeMounts:
          {{- include "3fs-shell.volumeMounts" . | nindent 10 }}
      - name: check-configmap
        image: {{ $.Values.Common.kube_image }}
        imagePullPolicy: {{ $.Values.Common.kube_imagePullPolicy | default "IfNotPresent" }}
        securityContext: 
          privileged: true
          runAsUser: 0
        command:
        - "bash"
        - "-c"
        - |
          /bin/bash /opt/3fs/shell/check.sh get_configmap_status
          /bin/bash /opt/3fs/shell/check.sh get_mgmtd_server
          /bin/bash /opt/3fs/shell/check.sh get_remote_ip
        env:
          {{- include "Common.env" . | nindent 10 }}
        envFrom:
          {{- include "Common.envFrom" $ | nindent 10 }}
        volumeMounts:
          {{- include "3fs-shell.volumeMounts" . | nindent 10 }}
      - name: check-3fs
        image: {{ $.Values.Common.image }}
        imagePullPolicy: {{ $.Values.Common.imagePullPolicy | default "IfNotPresent" }}
        securityContext: 
          privileged: true
          runAsUser: 0
        command:
        - "bash"
        - "-c"
        - |
          /bin/bash /opt/3fs/shell/start.sh
          /bin/bash /opt/3fs/shell/check.sh get_mgmtd_status
          /bin/bash /opt/3fs/shell/check.sh get_meta_status
        env:
          {{- include "Common.env" . | nindent 10 }}
        envFrom:
          {{- include "Common.envFrom" $ | nindent 10 }}
        volumeMounts:
          {{- include "AdminCli.volumeMounts" . | nindent 10 }}
          {{- include "3fs-shell.volumeMounts" . | nindent 10 }}
      containers:
      - name: storage
        image: {{ $.Values.Common.image }}
        imagePullPolicy: {{ $.Values.Common.imagePullPolicy | default "IfNotPresent" }}
        {{- if $.Values.Storage.resources }}
        resources: {{ toYaml $.Values.Storage.resources | nindent 10 }}
        {{- else if $.Values.resources }}
        resources: {{ toYaml $.Values.resources | nindent 10 }}
        {{- end }}
        livenessProbe:
          exec:
            command: 
            - "bash"
            - "-c"
            - |
              pgrep storage_main
          initialDelaySeconds: 60 
          periodSeconds: 10  
          failureThreshold: 6
          successThreshold: 1
          timeoutSeconds: 60 
        securityContext: 
          privileged: true
          runAsUser: 0
        command:
        - "bash"
        - "-c"
        - |
          /bin/bash /opt/3fs/shell/disktools.sh && /bin/bash /opt/3fs/shell/start.sh storage
        env:
          {{- include "Common.env" . | nindent 10 }}
          - name: disk
            value: {{ printf "'%s'" .disk }}
        envFrom:
          {{- include "Common.envFrom" $ | nindent 10 }}
        volumeMounts:
          {{- include "3fs-shell.volumeMounts" . | nindent 10 }}
          {{- include "AdminCli.volumeMounts" . | nindent 10 }}
          - name: storage-main
            mountPath: /tmp/storage_main.toml
            subPath: storage_main.toml
          - name: storage-main-app
            mountPath: /tmp/storage_main_app.toml
            subPath: storage_main_app.toml
          - name: storage-main-launcher
            mountPath: /tmp/storage_main_launcher.toml
            subPath: storage_main_launcher.toml
          - name: dev 
            mountPath: /dev
      volumes:
        {{- include "AdminCli.volumes" . | nindent 8 }}
        {{- include "3fs-shell.volumes" . | nindent 8 }}
        - name: storage-main
          configMap:
            name: storage
            items:
            - key: storage_main.toml
              path: storage_main.toml
        - name: storage-main-app
          configMap:
            name: storage
            items:
            - key: storage_main_app.toml
              path: storage_main_app.toml
        - name: storage-main-launcher
          configMap:
            name: storage
            items:
            - key: storage_main_launcher.toml
              path: storage_main_launcher.toml
        - name: dev 
          hostPath:
            path: /dev
            type: Directory
{{- end }}