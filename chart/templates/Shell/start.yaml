---
kind: ConfigMap
apiVersion: v1
metadata:
  name: start
  namespace: {{ .Values.Common.namespace | default "k3fs"  }}
data:
  start.sh: |-
    #! /bin/bash
    set -euo pipefail
    sysctl -w fs.aio-max-nr=1048576
    cp /tmp/*.toml /opt/3fs/etc/
    ls -l /opt/3fs/etc/

    config_common(){
        echo $FdbCluster > /opt/3fs/etc/fdb.cluster
        sed -i "s|remote_ip = remote_ip|remote_ip = '${REMOTE_IP}'|g" /opt/3fs/etc/*.toml
        sed -i "s|cluster_id = cluster_id|cluster_id = '${ClusterId}'|g" /opt/3fs/etc/*.toml
        set +euo
        sed -i "s|mgmtd_server_addresses = mgmtd_server_addresses|mgmtd_server_addresses = ${MGMTD_SERVER_ADDRESSES}|g" /opt/3fs/etc/*.toml
    }

    start_monitor(){
        sed -i "s|type = type|type = '${DBType}'|g" /opt/3fs/etc/monitor_collector_main.toml
        sed -i "s|host = host|host = '${ClickhouseHost}'|g" /opt/3fs/etc/monitor_collector_main.toml
        sed -i "s|port = port|port = '${ClickhousePort}'|g" /opt/3fs/etc/monitor_collector_main.toml
        sed -i "s|user = user|user = '${ClickhouseUser}'|g" /opt/3fs/etc/monitor_collector_main.toml
        sed -i "s|passwd = password|passwd = '${ClickhousePasswd}'|g" /opt/3fs/etc/monitor_collector_main.toml
        sed -i "s|db = db|db = '${ClickhouseDB}'|g" /opt/3fs/etc/monitor_collector_main.toml
        sed -i "s|listen_port = 10000|listen_port = ${MonitorPort}|g" /opt/3fs/etc/monitor_collector_main.toml
        # 启动
        /opt/3fs/bin/monitor_collector_main --cfg /opt/3fs/etc/monitor_collector_main.toml
    }

    start_init(){
        # 初始化集群
        sed -i "s|listen_port = 8000|listen_port = ${MgmtdPort1}|g" /opt/3fs/etc/mgmtd_main.toml
        sed -i "s|listen_port = 9000|listen_port = ${MgmtdPort2}|g" /opt/3fs/etc/mgmtd_main.toml
        /opt/3fs/bin/admin_cli -cfg /opt/3fs/etc/admin_cli.toml "init-cluster --mgmtd /opt/3fs/etc/mgmtd_main.toml ${ChainTableId} ${ChunkSize} ${StripSize}" 
    }

    start_mgmtd(){
        NodeId=$(echo $POD_NAME  |  awk -F '-' '{print $2}')
        sed -i "s|node_id = node_id|node_id = ${NodeId}|g" /opt/3fs/etc/mgmtd_main_app.toml
        # 启动
        /opt/3fs/bin/mgmtd_main --launcher_cfg /opt/3fs/etc/mgmtd_main_launcher.toml --app-cfg /opt/3fs/etc/mgmtd_main_app.toml
    }

    start_meta(){
        NodeId=$(echo $POD_NAME  |  awk -F '-' '{print $2}')
        sed -i "s|node_id = node_id|node_id = ${NodeId}|g" /opt/3fs/etc/meta_main_app.toml
        sed -i "s|listen_port = 8001|listen_port = ${MetaPort1}|g" /opt/3fs/etc/meta_main.toml
        sed -i "s|listen_port = 9001|listen_port = ${MetaPort2}|g" /opt/3fs/etc/meta_main.toml
        # 注册
        /opt/3fs/bin/admin_cli -cfg /opt/3fs/etc/admin_cli.toml --config.mgmtd_client.mgmtd_server_addresses "${MGMTD_SERVER_ADDRESSES}" "set-config --type META --file /opt/3fs/etc/meta_main.toml"
        # 启动
        /opt/3fs/bin/meta_main --launcher_cfg /opt/3fs/etc/meta_main_launcher.toml --app-cfg /opt/3fs/etc/meta_main_app.toml
    }

    start_storage(){
        NodeId=$(echo $POD_NAME | awk -F '-' '{print $2}')
        sed -i "s|node_id = node_id|node_id = ${NodeId}|g" /opt/3fs/etc/storage_main_app.toml
        if [[ "$DeployMode" == "default" ]]; then
            Port1=${StoragePort1}
            Port2=${StoragePort2}
        elif [[ "$DeployMode" == "custom" ]]; then
            Port1=$((NodeId+0))
            Port2=$((NodeId+1000))
        else
            echo "DeployMode invalid value, Please use 'dir' or 'disk'. "
            exit 1
        fi
        echo "port： ${Port1},${Port2}"
        sed -i "s|listen_port = 18001|listen_port = ${Port1}|g" /opt/3fs/etc/storage_main.toml
        sed -i "s|listen_port = 19001|listen_port = ${Port2}|g" /opt/3fs/etc/storage_main.toml
        # 替换target_paths
        ls -l /mnt/data*
        target_paths=$(printf "[%s]" "$(seq -f "\"/mnt/data%02g/3fs\"" $DiskPerNode | tr '\n' ',' | sed 's/,$//')")
        sed -i "s|target_paths = target_paths|target_paths = $target_paths|" /opt/3fs/etc/storage_main.toml

        sleep $((NodeId % 10000 * 10))
        # 注册
        /opt/3fs/bin/admin_cli -cfg /opt/3fs/etc/admin_cli.toml --config.mgmtd_client.mgmtd_server_addresses "${MGMTD_SERVER_ADDRESSES}" "set-config --type STORAGE --file /opt/3fs/etc/storage_main.toml"
        # 启动
        /opt/3fs/bin/storage_main --launcher_cfg /opt/3fs/etc/storage_main_launcher.toml --app-cfg /opt/3fs/etc/storage_main_app.toml
    }

    user_add(){
        /opt/3fs/bin/admin_cli -cfg /opt/3fs/etc/admin_cli.toml --config.mgmtd_client.mgmtd_server_addresses "${MGMTD_SERVER_ADDRESSES}" "user-add --root --admin 0 root" | tee /opt/3fs/etc/user.txt
        cat /opt/3fs/etc/user.txt | grep Token | awk '{print $2}' | cut -d'(' -f1  | tee /opt/3fs/etc/token.txt
        cp /opt/3fs/etc/token.txt /shared-data/token.txt
    }

    gen_chaintable(){
        echo "$(pwd)"

        python3 /opt/3fs/data_placement/src/model/data_placement.py \
        -ql \
        -relax \
        -type CR \
        --num_nodes ${StorageNodeNum} \
        --replication_factor ${ReplicationFactor} \
        --num_targets_per_disk ${ReplicationFactor}

        python3 /opt/3fs/data_placement/src/setup/gen_chain_table.py \
           --chain_table_type CR \
           --node_id_begin ${NodeIdBegin} \
           --node_id_end $(( ${NodeIdBegin}+${StorageNodeNum}-1 )) \
           --num_disks_per_node ${DiskPerNode} \
           --num_targets_per_disk ${ReplicationFactor} \
           --target_id_prefix 1 --chain_id_prefix 9 \
           --incidence_matrix_path output/$(ls output | grep DataPlacementModel)/incidence_matrix.pickle

        echo "Creating target."
        /opt/3fs/bin/admin_cli --cfg /opt/3fs/etc/admin_cli.toml --config.mgmtd_client.mgmtd_server_addresses ${MGMTD_SERVER_ADDRESSES} \
        --config.user_info.token "${TOKEN}" < output/create_target_cmd.txt
        echo "Uploading chains."
        /opt/3fs/bin/admin_cli --cfg /opt/3fs/etc/admin_cli.toml --config.mgmtd_client.mgmtd_server_addresses ${MGMTD_SERVER_ADDRESSES} \
        --config.user_info.token "${TOKEN}" "upload-chains output/generated_chains.csv"
        echo "Uploading chaintable."
        /opt/3fs/bin/admin_cli --cfg /opt/3fs/etc/admin_cli.toml --config.mgmtd_client.mgmtd_server_addresses ${MGMTD_SERVER_ADDRESSES} \
        --config.user_info.token "${TOKEN}" "upload-chain-table --desc ${ClusterId} ${ChainTableId} output/generated_chain_table.csv"
    }

    start_admin_cli(){
        echo $TOKEN | tee /opt/3fs/etc/token.txt
        tail -f /etc/profile
    }

    start_fuse_client(){
        mkdir -p ${MountPoint}
        echo $TOKEN | tee /opt/3fs/etc/token.txt
        sed -i "s|mountpoint = mountpoint|mountpoint = '${MountPoint}'|g" /opt/3fs/etc/hf3fs_fuse_main_launcher.toml
        # 注册
        /opt/3fs/bin/admin_cli -cfg /opt/3fs/etc/admin_cli.toml --config.mgmtd_client.mgmtd_server_addresses "$MGMTD_SERVER_ADDRESSES" "set-config --type FUSE --file /opt/3fs/etc/hf3fs_fuse_main.toml"
        # 启动
        /opt/3fs/bin/hf3fs_fuse_main --launcher_cfg /opt/3fs/etc/hf3fs_fuse_main_launcher.toml
    }

    config_common

    if [ $# -eq 1 ]; then
        case "$1" in
        monitor)
            start_monitor
            ;;
        init)
            start_init
            ;;
        mgmtd)
            start_mgmtd
            ;;
        meta)
            start_meta
            ;;
        storage)
            start_storage
            ;;
        user_add)
            user_add
            ;;
        gen_chaintable)
            gen_chaintable
            ;;
        fuse_client)
            start_fuse_client
            ;;
        admin_cli)
            start_admin_cli
            ;;  
        *)
            echo "Unknown parameter: $1"
            echo "Parameter: monitor|init|mgmtd|meta|storage|user_add|gen_chaintable|fuse_client|admin_cli"
            ;;
        esac
    elif [ $# -gt 1 ]; then
        echo "More than one parameter."
    else
        echo "No parameters, only modify the configuration file."
    fi